/*Credit to Mateusz Rybczonec from css-tricks.com */

/*Color Palette hex codes:
#4a4e4d (dark gray) • #12b5c4 (tealish blue)• #47c4cc (lighter tealish blue) • #ffd25c (yellow)• #ff8b6e (peach-ish)*/ 

:root {
  --distanceFromTop: 20vh;
}

body {
    font-family: 'Montserrat', sans-serif;
    display: grid;
    height: 100vh;
    place-items: center;
    color: #4a4e4d;
    background-color: #bdd9db; 
}

button {
  font-family: 'Montserrat', sans-serif;
  background-color: #ff8b6e;
  border: none;
  color: white;
  padding: 10px 20px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 14px;
  margin: 4px 2px;
  cursor: pointer;
  width: 70px;
  height: 20px;
  padding: 0px 0px 0px 0px;
  font-weight: bold;
}

/*Canvas CSS settings*/
.p5Canvas {
  
}


/* Sets the container's height and width*/
.base-timer {
    position: fixed;
    top: 600px;
    left: 100px;
    height: 100px;
    width: 100px;
}

.base-timer__svg {
    transform: scaleX(-1);
}

/* Removes SVG styling that might have hidden the time label*/
.base-timer__circle {
    fill: none;
    stroke: none;
}

/*The SVG path that displays the timer's progress*/
.base-timer__path-elapsed {
    stroke-width: 7px;
    stroke: grey;
}

.base-timer__path-remaining {
    /*as thick as orignal ring*/
    stroke-width: 7px;
    /*rounds the line endings for a seamless circle*/
    stroke-linecap: round;
    /*makes sure animation starts at top of circle*/
    transform: rotate(90deg);
    transform-origin: center;
    /*one second aligns with the speed of the countdown*/
    transition: 1s linear all;
    fill-rule: nonzero;
    /*allows ring to change color when color value updates*/
    stroke: currentColor;
}

.base-timer__path-remaining.green {
    color: rgb(65, 184, 131);
}

.base-timer__path-remaining.orange {
    color: orange;
}

.base-timer__path-remaining.red {
    color: red;
}

.base-timer__label {
    position: absolute;
    /*Size must match it's parent container */
    width: 100px;
    height: 100px;
    /*Label eligned to top*/
    top: 0;
    /*Flexible box that centers content vertically and horizontally*/ 
    display: flex;
    align-items: center;
    justify-content: center;
    /*Adjust to our liking */
    font-size: 38px;
}
/* end Credit to Mateusz Rybczonec from css-tricks.com */

#guessContainer {
    position: fixed;
    right: 50px;
    top: 100px;
    width: 260px;
    height: 500px;
    background-color: rgb(255, 209, 92, 0.8);
    text-align: center;
    border-radius: 10px;
}

#guessContainer h3, h2, button, p{
  margin-left: 20px;
  display: inline-block;
  cursor: pointer;
}

#guessContainer input {
  margin-left: 20px;
  positon: relative;
  display: inline-block;
  cursor: pointer;
}
#guessContainer h3 {
  margin-top: 0px;
}

#guessContainer button {
  margin-top: 0px;
  border-radius: 1px;
}

#player {
    position: fixed;
    left: 100px;
    top: 350px;
}

.grayText {
    color: #4a4e4d; /*royal blue-ish*/
}

.centeredText {
    text-align: center;
}

/*Set the position and height and width of the SCORE container*/
.score {
  position: fixed;
  top: var(--distanceFromTop);
  left: 100px;
  height: 50px;
  width: 200px;
  color: #4a4e4d; /*royal blue-ish*/
  text-align: left;
  background-color: rgb(255, 139, 110, 0.8);
  padding: 10px;
  border-radius: 10px;
}

.score p {
  margin-left: 0px;
  margin-top: 0px;
  margin-bottom: 10px;
}

#rulesandcontrols h3, p {
  margin: 0px;
  margin-bottom: 10px;
  text-align: left;
}

#rulesandcontrols {
  position: fixed;
  left: 100px;
  top: 500px;
  width: 100px;
}

/* dont move this from the bottom it is being stupid*/
#guessContainer p {
  margin-left: 20px;
}